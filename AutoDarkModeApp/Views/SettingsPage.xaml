<Page
    x:Class="AutoDarkModeApp.Views.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:AutoDarkModeApp.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="using:CommunityToolkit.WinUI"
    xmlns:xaml="using:Microsoft.UI.Xaml"
    mc:Ignorable="d">
    <Page.Resources>
        <!--  These are converters for different controls  -->
        <helpers:NullableBoolToBoolConverter x:Key="NullableBoolToBoolConverter" />
        <helpers:EnumToIndexConverter x:Key="EnumToIndexConverter" />
    </Page.Resources>

    <ScrollViewer>
        <Grid x:Name="ContentArea">
            <StackPanel Style="{StaticResource PageBaseStackPanelStyle}">

                <!--  Some settings  -->
                <TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}" Text="{helpers:ResourceString Name=Settings}" />
                <controls:SettingsCard ContentAlignment="Left">
                    <CheckBox Content="{helpers:ResourceString Name=HideTrayIcon}"
                              IsChecked="{x:Bind ViewModel.IsHideTray, Mode=TwoWay}" />
                </controls:SettingsCard>

                <controls:SettingsExpander>
                    <controls:SettingsExpander.Header>
                        <CheckBox
                            x:Name="DebugModeCheckBox"
                            Content="{helpers:ResourceString Name=DebugMode}"
                            IsChecked="{x:Bind ViewModel.IsTunableDebug, Mode=TwoWay}" />
                    </controls:SettingsExpander.Header>
                    <controls:SettingsExpander.Items>
                        <controls:SettingsCard ContentAlignment="Left" IsEnabled="{x:Bind DebugModeCheckBox.IsChecked, Converter={StaticResource NullableBoolToBoolConverter}, Mode=OneWay}">
                            <CheckBox Content="{helpers:ResourceString Name=TraceMode}" IsChecked="{x:Bind ViewModel.IsTunableTrace, Mode=TwoWay}" />
                        </controls:SettingsCard>
                    </controls:SettingsExpander.Items>
                </controls:SettingsExpander>
                
                <controls:SettingsExpander Visibility="{x:Bind ViewModel.EnergySaverSettingsCardVisiblity, Mode=OneWay}">
                    <controls:SettingsExpander.Header>
                        <CheckBox Content="{helpers:ResourceString Name=EnergySaverMitigation}" IsChecked="{x:Bind ViewModel.IsDisableEnergySaverOnThemeSwitch, Mode=TwoWay}" />
                    </controls:SettingsExpander.Header>
                    <controls:SettingsExpander.Items>
                        <controls:SettingsCard>
                            <controls:SettingsCard.Description>
                                <Slider
                                    Header="{helpers:ResourceString Name=BatterySlider}"
                                    TickFrequency="20"
                                    Value="{x:Bind ViewModel.BatterySliderValue, Mode=TwoWay}" />
                            </controls:SettingsCard.Description>
                        </controls:SettingsCard>
                    </controls:SettingsExpander.Items>
                </controls:SettingsExpander>

                <!--  Language  -->
                <TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}" Text="{helpers:ResourceString Name=Language}" />
                <controls:SettingsCard
                    Description="{helpers:ResourceString Name=Translator}"
                    Header="{helpers:ResourceString Name=Language}"
                    HeaderIcon="{ui:FontIcon Glyph=&#xF2B7;}">
                    <ComboBox MinWidth="120" SelectedItem="{x:Bind ViewModel.Language, Mode=TwoWay}">
                        <x:String>Česky (Czech)</x:String>
                        <x:String>Deutsch (German)</x:String>
                        <x:String>Nederlands (Dutch)</x:String>
                        <x:String>English (English)</x:String>
                        <x:String>Français (French)</x:String>
                        <x:String>Ελληνικά (Greek)</x:String>
                        <x:String>Magyarul (Hungarian)</x:String>
                        <x:String>Bahasa Indonesia (Indonesian)</x:String>
                        <x:String>Italiano (Italian)</x:String>
                        <x:String>日本語 (Japanese)</x:String>
                        <x:String>Norwegian Bokmål</x:String>
                        <x:String>Persian (Farsi)</x:String>
                        <x:String>Polski (Polish)</x:String>
                        <x:String>Português (Portuguese)</x:String>
                        <x:String>Português (Brazil)</x:String>
                        <x:String>Română (Romanian)</x:String>
                        <x:String>Русский (Russian)</x:String>
                        <x:String>Srpski (Serbian)</x:String>
                        <x:String>Español (Spanish)</x:String>
                        <x:String>Türkçe (Turkish)</x:String>
                        <x:String>Українська (Ukrainian)</x:String>
                        <x:String>Tiếng Việt (Vietnamese)</x:String>
                        <x:String>简体中文 (Simplified Chinese)</x:String>
                        <x:String>繁體中文 (Traditional Chinese)</x:String>
                    </ComboBox>
                </controls:SettingsCard>
                <InfoBar
                    IsClosable="False"
                    IsOpen="{x:Bind ViewModel.IsLanguageChangedInfoBarOpen, Mode=OneWay}"
                    Message="{helpers:ResourceString Name=RestartNeeded}"
                    Severity="Informational">
                    <InfoBar.ActionButton>
                        <Button
                            MinWidth="120"
                            HorizontalAlignment="Right"
                            Command="{x:Bind ViewModel.RestartCommand}"
                            Content="{helpers:ResourceString Name=Restart}" />
                    </InfoBar.ActionButton>
                </InfoBar>

                <!--  Updates  -->
                <TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}" Text="{helpers:ResourceString Name=Updates}" />
                <!--  Check now  -->
                <controls:SettingsCard Header="{x:Bind ViewModel.UpdatesDate, Mode=OneWay}">
                    <Button
                        MinWidth="120"
                        Command="{x:Bind ViewModel.CheckUpdateCommand}"
                        Content="{helpers:ResourceString Name=CheckUpdate}"
                        Style="{ThemeResource AccentButtonStyle}" />
                </controls:SettingsCard>

                <!--  Auto check  -->
                <controls:SettingsExpander Header="{helpers:ResourceString Name=BackgroundUpdate}">
                    <ToggleSwitch x:Name="EnableUpdaterToggleSwitch" IsOn="{x:Bind ViewModel.IsUpdaterEnabled, Mode=TwoWay}" />
                    <controls:SettingsExpander.Items>
                        <!--  Update settings  -->
                        <controls:SettingsCard IsEnabled="{x:Bind ViewModel.IsUpdaterEnabled, Mode=OneWay}">
                            <controls:SettingsCard.Header>
                                <StackPanel Spacing="{StaticResource RadioButtonsRowSpacing}">
                                    <CheckBox Content="{helpers:ResourceString Name=UpdateAtStart}" IsChecked="{x:Bind ViewModel.IsCheckOnStart, Mode=TwoWay}" />
                                    <CheckBox
                                        x:Name="AutoInstallCheckBox"
                                        Content="{helpers:ResourceString Name=AutoInstall}"
                                        IsChecked="{x:Bind ViewModel.IsAutoInstall, Mode=TwoWay}" />
                                    <CheckBox
                                        Content="{helpers:ResourceString Name=InstallSilent}"
                                        IsChecked="{x:Bind ViewModel.IsUpdateSilent, Mode=TwoWay}"
                                        IsEnabled="{x:Bind AutoInstallCheckBox.IsChecked, Converter={StaticResource NullableBoolToBoolConverter}, Mode=OneWay}" />
                                </StackPanel>
                            </controls:SettingsCard.Header>
                        </controls:SettingsCard>

                        <!--  Frequency  -->
                        <!--  TODO: update values (I suggest day/week/month)  -->
                        <controls:SettingsCard Header="{helpers:ResourceString Name=UpdateInterval}" IsEnabled="{x:Bind ViewModel.IsUpdaterEnabled, Mode=OneWay}">
                            <ComboBox SelectedIndex="{x:Bind ViewModel.SelectedDaysBetweenUpdateCheck, Converter={StaticResource EnumToIndexConverter}, Mode=TwoWay}">
                                <ComboBoxItem Content="{helpers:ResourceString Name=Interval1}" />
                                <ComboBoxItem Content="{helpers:ResourceString Name=Interval3}" />
                                <ComboBoxItem Content="{helpers:ResourceString Name=Interval7}" />
                                <ComboBoxItem Content="{helpers:ResourceString Name=Interval14}" />
                            </ComboBox>
                        </controls:SettingsCard>
                    </controls:SettingsExpander.Items>
                </controls:SettingsExpander>

                <!--  New: UpdateChannel  -->
                <controls:SettingsCard Header="{helpers:ResourceString Name=UpdateChannel}">
                    <ComboBox SelectedIndex="{x:Bind ViewModel.SelectedUpdateChannel, Converter={StaticResource EnumToIndexConverter}, Mode=TwoWay}">
                        <ComboBoxItem Content="{helpers:ResourceString Name=Stable}" />
                        <ComboBoxItem Content="{helpers:ResourceString Name=Beta}" />
                    </ComboBox>
                </controls:SettingsCard>

                <!--  Auto start  -->
                <TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}" Text="{helpers:ResourceString Name=Autostart}" />
                <controls:SettingsExpander Header="{helpers:ResourceString Name=StartWithWindows}">
                    <ToggleSwitch x:Name="AutostartToggleSwitch" IsOn="{x:Bind ViewModel.IsAutostart, Mode=TwoWay}" />
                    <controls:SettingsExpander.Items>
                        <controls:SettingsCard IsEnabled="{x:Bind ViewModel.IsAutostart, Mode=OneWay}">
                            <controls:SettingsCard.Header>
                                <CheckBox Content="{helpers:ResourceString Name=LogonTask}" IsChecked="{x:Bind ViewModel.IsLoginWithTask, Mode=TwoWay}" />
                            </controls:SettingsCard.Header>
                        </controls:SettingsCard>
                    </controls:SettingsExpander.Items>
                </controls:SettingsExpander>

                <controls:SettingsCard>
                    <controls:SettingsCard.Header>
                        <StackPanel Orientation="Vertical">
                            <TextBlock>
                                <Run Text="{helpers:ResourceString Name=ModeAt}" />
                                <Run Foreground="{ThemeResource TextFillColorSecondaryBrush}" Text="{x:Bind ViewModel.AutostartMode, Mode=OneWay}" />
                            </TextBlock>
                            <TextBlock IsTextSelectionEnabled="True" ToolTipService.ToolTip="{x:Bind ViewModel.AutostartPath, Mode=OneWay}">
                                <Run Text="{helpers:ResourceString Name=PathAt}" />
                                <Run Foreground="{ThemeResource TextFillColorSecondaryBrush}" Text="{x:Bind ViewModel.AutostartPath, Mode=OneWay}" />
                            </TextBlock>
                        </StackPanel>
                    </controls:SettingsCard.Header>
                    <Button
                        MinWidth="120"
                        Command="{x:Bind ViewModel.AutostartRefreshCommand}"
                        Content="{helpers:ResourceString Name=RefreshAutostart}" />
                </controls:SettingsCard>

                <!--  Config  -->
                <TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}" Text="{helpers:ResourceString Name=Configuration}" />
                <!--
                    TODO:
                    * remove redundancy for these "links", with other pages
                    * show location in TextBlock or ToolTip?
                -->
                <controls:SettingsCard
                    ActionIcon="{ui:FontIcon Glyph=&#xE932;}"
                    Click="OpenConfigSettingsCard_Click"
                    Header="{helpers:ResourceString Name=OpenConfigFile}"
                    IsClickEnabled="True" />
                <controls:SettingsCard
                    ActionIcon="{ui:FontIcon Glyph=&#xE838;}"
                    Click="OpenConfigFolderSettingsCard_Click"
                    Header="{helpers:ResourceString Name=OpenConfigFolder}"
                    IsClickEnabled="True" />

            </StackPanel>
        </Grid>
    </ScrollViewer>

</Page>
