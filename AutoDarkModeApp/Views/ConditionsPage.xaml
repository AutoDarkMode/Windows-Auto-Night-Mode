<Page
    x:Class="AutoDarkModeApp.Views.ConditionsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:AutoDarkModeApp.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="using:CommunityToolkit.WinUI"
    mc:Ignorable="d">
    <Page.Resources>
        <!--  These are converters for different controls  -->
        <helpers:NullableBoolToBoolConverter x:Key="NullableBoolToBoolConverter" />
    </Page.Resources>

    <ScrollViewer>
        <Grid x:Name="ContentArea" Margin="{StaticResource NavigationViewPageContentMargin}">
            <StackPanel Style="{StaticResource PageBaseStackPanelStyle}">

                <!--  Conditions  -->
                <TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}" Text="{helpers:ResourceString Name=Conditions}" />
                <controls:SettingsExpander HeaderIcon="{ui:FontIcon Glyph=&#xE7FC;}">
                    <controls:SettingsExpander.Header>
                        <CheckBox
                            x:Name="GPUMonitoringCheckBox"
                            Content="{helpers:ResourceString Name=DonotSwitchGPUMonitoring}"
                            IsChecked="{x:Bind ViewModel.GPUMonitoringEnabled, Mode=TwoWay}" />
                    </controls:SettingsExpander.Header>
                    <controls:SettingsExpander.Items>
                        <controls:SettingsCard Header="{helpers:ResourceString Name=MinimumUsage}" IsEnabled="{x:Bind ViewModel.GPUMonitoringEnabled, Mode=OneWay}">
                            <NumberBox
                                Maximum="100"
                                Minimum="0"
                                SmallChange="5"
                                SpinButtonPlacementMode="Inline"
                                Value="{x:Bind ViewModel.GPUMonitoringThreshold, Mode=TwoWay}" />
                        </controls:SettingsCard>
                        <controls:SettingsCard Header="{helpers:ResourceString Name=GpuUsageDetectionSpeed}" IsEnabled="{x:Bind ViewModel.GPUMonitoringEnabled, Mode=OneWay}">
                            <ComboBox SelectedIndex="{x:Bind ViewModel.GPUMonitoringSamples, Mode=TwoWay}">
                                <ComboBoxItem Content="{helpers:ResourceString Name=SamplesFast}" />
                                <ComboBoxItem Content="{helpers:ResourceString Name=SamplesMedium}" />
                                <ComboBoxItem Content="{helpers:ResourceString Name=SamplesSlow}" />
                            </ComboBox>
                        </controls:SettingsCard>
                    </controls:SettingsExpander.Items>
                </controls:SettingsExpander>

                <!--  ProcessBlockList  -->
                <controls:SettingsExpander HeaderIcon="{ui:FontIcon Glyph=&#xECAA;}">
                    <controls:SettingsExpander.Header>
                        <CheckBox
                            x:Name="BlockListCheckBox"
                            Content="{helpers:ResourceString Name=ProcessBlockList}"
                            IsChecked="{x:Bind ViewModel.ProcessBlockEnabled, Mode=TwoWay}" />
                    </controls:SettingsExpander.Header>

                    <controls:SettingsExpander.Items>
                        <!--
                            use ViewModel.IsBlockListEnabled to enable/disable the card
                            then, NullableBoolToBoolConverter can be removed
                        -->
                        <controls:SettingsCard ContentAlignment="Left" IsEnabled="{x:Bind ViewModel.ProcessBlockEnabled, Mode=OneWay}">
                            <controls:TokenizingTextBox
                                Header="{helpers:ResourceString Name=BlockedProcesses}"
                                ItemsSource="{x:Bind ViewModel.ProcessBlockListItemSource, Mode=TwoWay}"
                                PlaceholderText="{helpers:ResourceString Name=AddApps}"
                                QueryIcon="{ui:FontIconSource Glyph=&#xE710;,
                                                              FontSize=12}"
                                SuggestedItemsSource="{x:Bind ViewModel.ProcessListItemSource, Mode=OneWay}"
                                TokenItemAdded="ProcessTokenizingTextBox_TokenItemChanged"
                                TokenItemRemoved="ProcessTokenizingTextBox_TokenItemChanged" />
                        </controls:SettingsCard>
                    </controls:SettingsExpander.Items>

                </controls:SettingsExpander>

                <!--  IdleTimer  -->
                <controls:SettingsExpander HeaderIcon="{ui:FontIcon Glyph=&#xE708;}">
                    <controls:SettingsExpander.Header>
                        <CheckBox
                            x:Name="IdleTimerCheckBox"
                            Content="{helpers:ResourceString Name=DonotSwitchIdleTimer}"
                            IsChecked="{x:Bind ViewModel.IdleCheckerEnabled, Mode=TwoWay}" />
                    </controls:SettingsExpander.Header>
                    <controls:SettingsExpander.Items>
                        <controls:SettingsCard Header="{helpers:ResourceString Name=IdleTime}" IsEnabled="{x:Bind ViewModel.IdleCheckerEnabled, Mode=OneWay}">
                            <NumberBox
                                Minimum="1"
                                SpinButtonPlacementMode="Inline"
                                Value="{x:Bind ViewModel.IdleCheckerThreshold, Mode=TwoWay}" />
                        </controls:SettingsCard>
                    </controls:SettingsExpander.Items>
                </controls:SettingsExpander>

                <!--  AutoSwitchNotification  -->
                <controls:SettingsExpander HeaderIcon="{ui:FontIcon Glyph=&#xE7E7;}">
                    <controls:SettingsExpander.Header>
                        <CheckBox
                            x:Name="AutoSwitchNotifyCheckBox"
                            Content="{helpers:ResourceString Name=AutoSwitchNotification}"
                            IsChecked="{x:Bind ViewModel.AutoSwitchNotifyEnabled, Mode=TwoWay}" />
                    </controls:SettingsExpander.Header>
                    <controls:SettingsExpander.Items>
                        <controls:SettingsCard Header="{helpers:ResourceString Name=AutoSwitchGracePeriod}" IsEnabled="{x:Bind ViewModel.AutoSwitchNotifyEnabled, Converter={StaticResource NullableBoolToBoolConverter}, Mode=OneWay}">
                            <NumberBox
                                Minimum="1"
                                SpinButtonPlacementMode="Inline"
                                Value="{x:Bind ViewModel.AutoSwitchNotifyGracePeriodMinutes, Mode=TwoWay}" />
                        </controls:SettingsCard>
                    </controls:SettingsExpander.Items>
                </controls:SettingsExpander>

                <!--  BatteryPowered  -->
                <TextBlock
                    Style="{StaticResource SettingsSectionHeaderTextBlockStyle}"
                    Text="{helpers:ResourceString Name=BatteryPowered}"
                    Visibility="{x:Bind ViewModel.BatterySettingsCardVisibility, Mode=OneWay}" />
                <controls:SettingsCard
                    ContentAlignment="Left"
                    HeaderIcon="{ui:FontIcon Glyph=&#xE858;}"
                    Visibility="{x:Bind ViewModel.BatterySettingsCardVisibility, Mode=OneWay}">
                    <CheckBox Content="{helpers:ResourceString Name=BatteryDarkMode}" IsChecked="{x:Bind ViewModel.BatteryDarkModeEnabled, Mode=TwoWay}" />
                </controls:SettingsCard>

                <!--  Hotkeys  -->
                <TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}" Text="{helpers:ResourceString Name=Hotkeys}" />
                <controls:SettingsCard Description="{helpers:ResourceString Name=HotkeyEditHint}" Header="{helpers:ResourceString Name=EnableHotkeys}">
                    <ToggleSwitch IsOn="{x:Bind ViewModel.HotkeysEnabled, Mode=TwoWay}" />
                </controls:SettingsCard>
                <controls:SettingsCard Header="{helpers:ResourceString Name=ForceLight}" IsEnabled="{x:Bind ViewModel.SettingsCardEnabled, Mode=OneWay}">
                    <TextBox
                        x:Name="HotkeyForceLightTextBox"
                        IsReadOnly="True"
                        PreviewKeyDown="HotkeyTextBox_KeyDown"
                        Text="{x:Bind ViewModel.HotkeyForceLight, Mode=OneTime}"
                        TextChanged="HotkeyTextBox_TextChanged" />
                </controls:SettingsCard>
                <controls:SettingsCard Header="{helpers:ResourceString Name=ForceDark}" IsEnabled="{x:Bind ViewModel.SettingsCardEnabled, Mode=OneWay}">
                    <TextBox
                        x:Name="HotkeyForceDarkTextBox"
                        IsReadOnly="True"
                        PreviewKeyDown="HotkeyTextBox_KeyDown"
                        Text="{x:Bind ViewModel.HotkeyForceDark, Mode=OneTime}"
                        TextChanged="HotkeyTextBox_TextChanged" />
                </controls:SettingsCard>
                <controls:SettingsCard Header="{helpers:ResourceString Name=StopForcing}" IsEnabled="{x:Bind ViewModel.SettingsCardEnabled, Mode=OneWay}">
                    <TextBox
                        x:Name="HotkeyHeaderNoForceTextBox"
                        IsReadOnly="True"
                        PreviewKeyDown="HotkeyTextBox_KeyDown"
                        Text="{x:Bind ViewModel.HotkeyNoForce, Mode=OneTime}"
                        TextChanged="HotkeyTextBox_TextChanged" />
                </controls:SettingsCard>
                <controls:SettingsCard Header="{helpers:ResourceString Name=ToggleTheme}" IsEnabled="{x:Bind ViewModel.SettingsCardEnabled, Mode=OneWay}">
                    <TextBox
                        x:Name="HotkeyHeaderToggleThemeTextBox"
                        IsReadOnly="True"
                        PreviewKeyDown="HotkeyTextBox_KeyDown"
                        Text="{x:Bind ViewModel.HotkeyToggleTheme, Mode=OneTime}"
                        TextChanged="HotkeyTextBox_TextChanged" />
                </controls:SettingsCard>
                <controls:SettingsExpander Header="{helpers:ResourceString Name=AutomaticThemeSwitch}" IsEnabled="{x:Bind ViewModel.SettingsCardEnabled, Mode=OneWay}">
                    <TextBox
                        x:Name="HotkeyHeaderToggleAutomaticThemeTextBox"
                        IsReadOnly="True"
                        PreviewKeyDown="HotkeyTextBox_KeyDown"
                        Text="{x:Bind ViewModel.HotkeyToggleAutomaticTheme, Mode=OneTime}"
                        TextChanged="HotkeyTextBox_TextChanged" />
                    <controls:SettingsExpander.Items>
                        <controls:SettingsCard ContentAlignment="Left">
                            <CheckBox Content="{helpers:ResourceString Name=ShowNotificationToggled}" IsChecked="{x:Bind ViewModel.HotkeyToggleAutomaticThemeNotificationEnabled, Mode=TwoWay}" />
                        </controls:SettingsCard>
                    </controls:SettingsExpander.Items>
                </controls:SettingsExpander>
                <controls:SettingsExpander Header="{helpers:ResourceString Name=PauseAutoThemeSwitching}" IsEnabled="{x:Bind ViewModel.SettingsCardEnabled, Mode=OneWay}">
                    <TextBox
                        x:Name="HotkeyHeaderTogglePostponeTextBox"
                        IsReadOnly="True"
                        PreviewKeyDown="HotkeyTextBox_KeyDown"
                        Text="{x:Bind ViewModel.HotkeyTogglePostpone, Mode=OneTime}"
                        TextChanged="HotkeyTextBox_TextChanged" />
                    <controls:SettingsExpander.Items>
                        <controls:SettingsCard ContentAlignment="Left">
                            <CheckBox Content="{helpers:ResourceString Name=ShowNotificationToggled}" IsChecked="{x:Bind ViewModel.HotkeyTogglePostponeNotificationEnabled, Mode=TwoWay}" />
                        </controls:SettingsCard>
                    </controls:SettingsExpander.Items>
                </controls:SettingsExpander>

            </StackPanel>
        </Grid>
    </ScrollViewer>

</Page>
