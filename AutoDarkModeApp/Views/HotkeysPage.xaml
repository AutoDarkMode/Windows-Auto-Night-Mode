<Page
    x:Class="AutoDarkModeApp.Views.HotkeysPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:converters="using:CommunityToolkit.WinUI.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:AutoDarkModeApp.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="using:AutoDarkModeApp.Models"
    mc:Ignorable="d">
    <Page.Resources>
        <converters:BoolNegationConverter x:Key="BoolNegationConverter" />
    </Page.Resources>

    <ScrollViewer>
        <Grid x:Name="ContentArea">
            <StackPanel Style="{StaticResource PageBaseStackPanelStyle}">

                <!--  Info that can only be edited when hotkeys are disabled  -->
                <InfoBar
                    IsClosable="False"
                    IsOpen="True"
                    Message="{helpers:ResourceString Name=HotkeyInfoBarMessage}"
                    Severity="Informational" />

                <!--  Settings  -->
                <TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}" Text="{helpers:ResourceString Name=Settings}" />
                <controls:SettingsCard Header="{helpers:ResourceString Name=EnableHotkeys}">
                    <ToggleSwitch x:Name="HotkeysToggleSwitch" IsOn="{x:Bind ViewModel.HotkeysEnabled, Mode=TwoWay}" />
                </controls:SettingsCard>
                <controls:SettingsCard Header="{helpers:ResourceString Name=ShowNotificationAutomaticThemeToggled}" IsEnabled="{x:Bind ViewModel.HotkeysEnabled, Mode=OneWay}">
                    <ToggleSwitch IsOn="{x:Bind ViewModel.HotkeyToggleAutomaticThemeNotificationEnabled, Mode=TwoWay}" />
                </controls:SettingsCard>
                <controls:SettingsCard Header="{helpers:ResourceString Name=ShowNotificationPostponeToggled}" IsEnabled="{x:Bind ViewModel.HotkeysEnabled, Mode=OneWay}">
                    <ToggleSwitch IsOn="{x:Bind ViewModel.HotkeyTogglePostponeNotificationEnabled, Mode=TwoWay}" />
                </controls:SettingsCard>
                <!--  Force save settingscard  -->
                <controls:SettingsCard Header="{helpers:ResourceString Name=Msg_HotkeyProblem}" IsEnabled="{x:Bind ViewModel.HotkeysEnabled, Mode=OneWay}">
                    <Button
                        x:Name="SaveSettingsButton"
                        HorizontalAlignment="Right"
                        Click="SaveSettingsButton_Click"
                        Content="{helpers:ResourceString Name=ForceSaveSettings}">
                        <Button.ContentTransitions>
                            <TransitionCollection>
                                <ContentThemeTransition />
                            </TransitionCollection>
                        </Button.ContentTransitions>
                    </Button>
                </controls:SettingsCard>

                <!--  Hotkeys  -->
                <TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}" Text="{helpers:ResourceString Name=HotKeys}" />
                <ItemsControl IsEnabled="{x:Bind ViewModel.HotkeysEnabled, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}" ItemsSource="{x:Bind ViewModel.HotkeysCollection, Mode=OneWay}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate x:DataType="models:HotkeysDataObject">

                            <!--  Hotkey editing and displays settingscard  -->
                            <controls:SettingsCard Margin="0,0,0,4" Header="{x:Bind DisplayName}">
                                <StackPanel Orientation="Horizontal" Spacing="8">
                                    <TextBox
                                        MinWidth="160"
                                        IsReadOnly="True"
                                        Text="{x:Bind Keys, Mode=OneWay}" />
                                    <Button
                                        Width="32"
                                        Height="32"
                                        Padding="0"
                                        AutomationProperties.Name="{helpers:ResourceString Name=EditHotkey}"
                                        Click="EditHotkeysButton_Click"
                                        CommandParameter="{x:Bind}">
                                        <Button.Content>
                                            <FontIcon FontSize="16" Glyph="&#xE70F;" />
                                        </Button.Content>
                                    </Button>
                                </StackPanel>
                            </controls:SettingsCard>

                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

            </StackPanel>
        </Grid>
    </ScrollViewer>
</Page>
